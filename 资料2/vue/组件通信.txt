因为业务需求，有时，我们需要把某个数据传递给子元素，那就需要进行组件通信


父->子
    1. 在组件身上绑定自定义属性
        <Child xxx='xxx' age='20' :动态数据='xxx' />

    2. 在子组件内接受传入的自定义属性
        只有接收了的数据，才能使用{{ }}或this来获取
        Child.vue

        props: ['xxx', 'age']

    3. 使用{{ 属性名 }}或 this.xxx来获取props属性
        <h1>{{ age }}</h1>
        this.age

子->父 （通过函数来传递参数）
    1. 在父组件上定义一个函数，用来接收儿子传入的数据
        Box.vue
        methods: {
            fuc(){
                //等会儿用来接收子组件传入的数据
            }
        }

    2. 使用自定义事件的方式，把此函数传给子组件
        <Child @fuc='fuc' />

    3. 在子组件内，使用$emit('自定义事件名')来触发传入的函数，并传入参数
        Child.vue

        //参数1： 自定义事件名
        //参数2： 要传入的参数
        this.$emit('fuc', 要传的参数)

    4. 隐藏步骤，在父亲的函数内，使用形参来接收传入的参数！！！
        Box.vue
        methods: {
            fuc(val){
                val//子组件传入的数据
            }
        }

