1 什么是网络？
    网络是信息传输、接收、共享的虚拟平台

2 网络传输要遵循一定的协议
    网络传输数据有一定规则，这些规则我们称协议，
    “HTTP” 就是规则中的一种，而且使用最为频繁是一种协议。

3 web客户端 和 web服务器 （了解）
    web客户端： 前端/浏览器端（上网用的软件工具）
    web服务器： 后端/服务器端 （存储数据）


4 软件模式（了解）
    1）单机软件（无需联网）
    2）C/S (client / Server) 客户端 / 服务器
        需要联网
        优点： 需要下载安装，占用网络资源少
        缺点： 只要服务器升级  需要更新（升级）

    3）B/S (Browser/Server) 浏览器 / 服务器
        优点： 不需要下载安装 （即使服务器升级也不需要）打开网址就能用
        缺点： 占用网络资源多

5 http协议
    1） 什么是http协议？
        超文本传输协议，定义了web客户端 和 web服务器交互数据的 “过程” 和 数据的 “格式”

    2） http协议的特点
        a) 采用 请求 / 应答方式
        b) 一次请求 一次响应

    注意***： 浏览器（客户端/前端）发送数据给服务器叫： “请求”
              服务器（服务器端/后端）发送数据给浏览器叫： “响应”

    3） http协议到底约束了什么？
        约束了数据传输的 “格式”

6 node搭建服务器步骤（掌握）
    1）新建一个js文件，引入http模块
        const http = require('http')

    2）使用http模块创建服务器
        const server =  http.createServer((req, res) => {
            req: (request)请求对象，负责接收前端传过来的数据
            res: (response) 响应对象，负责响应数据给前端
        })

    3） 监听端口
        server.listen(端口号, () => {
            console.log('服务器启动成功, 地址是: http://127.0.0.1:端口号')
        })

    4) 运行这个js文件
        node 文件名


    补充： 
        1) 全局安装nodemon 
            cnpm i nodemon -g

            备注：
                a) 全局安装 一般都是为了安装命令 
                b) 全局安装的东西 到底安装在哪里呢？
                    C:\Users\admin\AppData\Roaming\npm
                    记住哦！： 全局安装 会有两个文件 和 一个模块

        2) 之前使用node来运行js文件 现在改为使用nodemon nodemon会自动重启服务器
            安装前： node 文件名 
            安装后： nodemon 文件名


        3) 设置编码 解决中文乱码问题
            res.writeHead(200, {"Content-Type": "text/html; charset=utf-8"})

        4）如果前端请求，服务器没有响应，前端就会挂起（转圈圈）


7 http服务器可以响应不同的数据类型给前端（浏览器/客户端）
    1) 纯文本
        res.writeHead(200, {"Content-Type":"text/plain"});

    2) HTML
        res.writeHead(200, {"Content-Type":"text/html; charset=utf-8"});

    3) json （主流）
        res.writeHead(200, {"Content-Type":"text/json"});

    4) 图片
        res.writeHead(200, {"Content-Type":"image/png"});

8 安装模块分为全局安装和局部安装（补充）
    1） 局部安装：  就是把这个模块 安装在当前文件夹的node_modules里面
        如果需要使用 那么 需要用 require() 引入这个模块

        注意***： 局部安装直接把模块安装在当前目录的 node_modules 里面

    2） 全局安装： 全局安装只是为了 安装命令 而已

        注意***： 全局安装，安装的模块在 C:\Users\admin\AppData\Roaming\npm 目录的
        node_modules中

        例如：我们全局安装过两个模块  cnpm 和 nodemon 都只是为了使用这两个命令

9 http状态码 （记住常见的）
    200 // 请求成功

    301 // 永久重定向（这个网址不用了，请使用新的网址）
    302 // 网址临时重定向（临时使用这个网址 之后恢复）
    304 // 请求的资源未发生改变 （ 缓存 ）

    401 // 未授权（后端没有给你权限）
    403 // 服务器拒绝你的访问
    404 // 请求的地址找不到
    405 // 请求的方式不被 服务器 允许

    500 // 服务器错误


10 http模块的get方式 
    1）http是nodejs的一个内置模块 除了可以创建服务器之外 还可以使用get方法请求网络资源

    2）基本语法
        http.get('请求的资源网址', (response) => {
            // response 就是请求到的数据 （是数据流）
        })

11 数据传递 (其实就是传递参数给后台)
    客户端（浏览器端）发送数据给服务器有一下几种方式
        1）get方式
            a) 直接在浏览器输入地址
            b) a标签跳转  
            c) location.href 

            d) 表单提交
            e) ajax (推荐 工作中都是)

        2）post方式
            a) ajax (推荐 工作中都是)
            b) 表单提交

12 后端模板引擎 EJS 
    前端模板引擎（artTemplate）： 数据和模板在 “前端” 拼接 生成html
    nodeJS的后端模板引擎（ejs）： 数据和模板在 “后端” 拼接 生成html

13 ejs的使用（ejs是nodejs的模板引擎 主要用于在服务器端和数据拼接 生成html）
    1） 下载ejs
        cnpm i ejs

    2) 引入ejs模块

    3) 使用ejs模块（ejs的模板语法）
        a) 模板表达式
            <%= 输出变量%>

        b) 循环表达式
            <% for (var i=0; i<data.length; i++) { %>

            <% } %>