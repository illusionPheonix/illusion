1 cnpm的安装
    npm install -g cnpm --registry=https://registry.npm.taobao.org

2 node的控制台
    1) console.log() // 正常的打印

    2) console.error()  // 只是一种比较语义化的打印 主要用于输出错误信息

    3) console.time('flag') 和 console.timeEnd('flag')

    4) console.assert(条件表达式, "输出信息")

3 nodejs的作用域
    1）全局作用域
    2）局部作用域

    备注：
        node中的作用域基本都是局部作用域 因为使用node编译js文件的时候，所有的代码
        都被一个看不见的函数所 “包裹”

        function (exports, require, module, __filename, __dirname) {
            // 你写的所有代码都在这里
        }

    注意***：
        如果需要把变量变为全局 有两种方式
        a) 不写var关键字
        b) 添加global

4 回调函数
    1）什么是回调函数？
        把函数当成参数，传入另一个函数

    2）常见的回调函数
        a) 定时器
            setTimeout(callback, time);

        b) 事件绑定
            DOM.addEventListener('click', callback);

        c) ajax 
            var xhr = new XMLHttpRequest();
            xhr.open('get/post', 'url')
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.send();
            xhr.onreadystatechange = callback;

    注意： 回调函数 往往伴随着异步


5 同步和异步
    同步：阻塞代码
    异步：非阻塞代码

6 Promise
    1) 什么是Promise
        是es6新增的一个对象， 主要用于处理异步操作
        （ 主要用于封装ajax ）

    2）promise有三种状态
        pedding: 进行中
        resolved: 已成功
        rejected: 已失败

        状态的改变：
            pedding: 进行中  ===》 resolved: 已成功
            pedding: 进行中  ===》 rejected: 已失败


    3） 基本语法
        new Promise((resolve, reject) => {
            if ( true ) {
                // 如果条件是true 就可以使用 resolve 函数处理成功的数据 
                // 把数据传入下一个then的第 一 个函数
                resolve( "成功的数据" )
            } else {
                // 如果条件是false 就可以使用 reject 函数处理失败的数据
                // 把数据传入下一个then的第二个函数 （或者传入catch）
                reject( "失败的数据" )
            }
        })
            .then((data) => {
                // data就是上一步使用 resolve 处理的数据
            }, (err) => {
                // err就是上一步使用 reject 处理的错误信息
            })

            .catch((err) => {
                // err就是上一步使用 reject 处理的错误信息
            })

7 axios
    A 发送get请求
        a) axios.get('url?username=admin&password=123')
            .then(response => {
                // response.data 就是服务器响应回来的数据
            })
            .catch(err => {
                // err就是错误信息
            })


        b) axios.get('url', {
                params: {
                    username: "admin",
                    password: "123"
                }
            })
            .then(response => {
                // response.data 就是服务器响应回来的数据
            })
            .catch(err => {
                // err就是错误信息
            })

    B 发送post请求
            axios.post('url', {
                username: "admin",
                password: "123"
            })
            .then(response => {
                // response.data 就是服务器响应回来的数据
            })
            .catch(err => {
                // err就是错误信息
            })
